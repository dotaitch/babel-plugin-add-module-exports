{"version":3,"sources":["../src/index.js"],"names":["module","exports","template","pluginOptions","addModuleExportsDefaults","path","finder","ExportsFinder","isOnlyExportsDefault","isAmd","rootPath","getRootPath","accessDefaultWithBracket","node","body","push","addDefaultProperty","ExportsDefaultVisitor","CallExpression","get","matchesPattern","identifier","prop","objectName","propertyName","AssignmentExpression","visitor","Program","state","opts","post","fileMap","traverse","exportsDefaultPath","hasExportsDefault","hasExportsNamed","hasModuleExports","findParent","key","parentPath","forEach","isVariableDeclaration","findExports","isExpressionStatement","isAssignmentExpression","findExportsInCallExpression","property","self","hasntAmdRoot","amdRoot","isCallExpression"],"mappings":"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","file":"index.js","sourcesContent":["// 1. find to `exports.default`\n// 2. find to all Expression(`exports.default`, `exports.foo` etc)\n// 3. add `module.exports` if exists only `exports.default` assignment\n// The above works after executing `preset-env`(transform-es2015-modules-*) in `Plugin.post`\n\nmodule.exports = ({ template }) => {\n  let pluginOptions\n\n  function addModuleExportsDefaults(path) {\n    const finder = new ExportsFinder(path)\n    if (!finder.isOnlyExportsDefault()) {\n      return\n    }\n    if (finder.isAmd()) {\n      return\n    }\n    const rootPath = finder.getRootPath()\n\n    // HACK: `path.node.body.push` instead of path.pushContainer(due doesn't work in Plugin.post)\n    if (pluginOptions.accessDefaultWithBracket) {\n      rootPath.node.body.push(template('module.exports = exports[\"default\"]')())\n      if (pluginOptions.addDefaultProperty) {\n        rootPath.node.body.push(template('module.exports[\"default\"] = exports[\"default\"]')())\n      }\n    } else {\n      rootPath.node.body.push(template('module.exports = exports.default')())\n      if (pluginOptions.addDefaultProperty) {\n        rootPath.node.body.push(template('module.exports.default = exports.default')())\n      }\n    }\n  }\n\n  const ExportsDefaultVisitor = {\n    CallExpression(path) {\n      if (!path.get('callee').matchesPattern('Object.defineProperty')) {\n        return\n      }\n\n      const [identifier, prop] = path.get('arguments')\n      const objectName = identifier.get('name').node\n      const propertyName = prop.get('value').node\n\n      if ((objectName === 'exports' || objectName === '_exports') && propertyName === 'default') {\n        addModuleExportsDefaults(path)\n      }\n    },\n    AssignmentExpression(path) {\n      if (\n        path.get('left').matchesPattern('exports.default') ||\n        path.get('left').matchesPattern('_exports.default')\n      ) {\n        addModuleExportsDefaults(path)\n      }\n    }\n  }\n\n  return {\n    visitor: {\n      Program(path, state) {\n        // HACK: can't get plugin options in Plugin.post\n        pluginOptions = state.opts\n      }\n    },\n    post(fileMap) {\n      fileMap.path.traverse(ExportsDefaultVisitor)\n    }\n  }\n}\n\nclass ExportsFinder {\n  constructor(exportsDefaultPath) {\n    this.path = exportsDefaultPath\n    this.hasExportsDefault = false\n    this.hasExportsNamed = false\n    this.hasModuleExports = false\n  }\n\n  getRootPath() {\n    return this.path.findParent(path => {\n      return path.key === 'body' || !path.parentPath\n    })\n  }\n\n  isOnlyExportsDefault() {\n    this.getRootPath()\n      .get('body')\n      .forEach(path => {\n        if (path.isVariableDeclaration()) {\n          this.findExports(path.get('declarations.0'), 'init')\n        } else if (\n          path.isExpressionStatement() &&\n          path.get('expression').isAssignmentExpression()\n        ) {\n          this.findExports(path)\n        } else {\n          this.findExportsInCallExpression(path)\n        }\n      })\n    return this.hasExportsDefault && !this.hasExportsNamed && !this.hasModuleExports\n  }\n\n  findExports(path, property = 'expression') {\n    // Not `exports.anything`, skip\n    if (\n      !path.get(`${property}`).node ||\n      !path.get(`${property}.left`).node ||\n      !path.get(`${property}.left.object`).node\n    ) {\n      return\n    }\n\n    const objectName = path.get(`${property}.left.object.name`).node\n    // Check name of  MemberExpressions and values of StringLiterals\n    const propertyName =\n      path.get(`${property}.left.property.name`).node ||\n      path.get(`${property}.left.property.value`).node\n    if (objectName === 'exports' || objectName === '_exports') {\n      if (propertyName === 'default') {\n        this.hasExportsDefault = true\n      } else if (propertyName !== '__esModule') {\n        this.hasExportsNamed = true\n      }\n    }\n    if (`${objectName}.${propertyName}` === 'module.exports') {\n      this.hasModuleExports = true\n    }\n  }\n\n  findExportsInCallExpression(path) {\n    const self = this\n    path.traverse({\n      CallExpression(path) {\n        if (!path.get('callee').matchesPattern('Object.defineProperty')) {\n          return\n        }\n\n        const [identifier, prop] = path.get('arguments')\n        const objectName = identifier.get('name').node\n        const propertyName = prop.get('value').node\n\n        if (\n          (objectName === 'exports' || objectName === '_exports') &&\n          propertyName !== '__esModule'\n        ) {\n          if (propertyName === 'default') {\n            self.hasExportsDefault = true\n          } else {\n            self.hasExportsNamed = true\n          }\n        }\n      }\n    })\n  }\n\n  isAmd() {\n    const rootPath = this.getRootPath()\n    const hasntAmdRoot = !(rootPath.parentPath && rootPath.parentPath.parentPath)\n    if (hasntAmdRoot) {\n      return false\n    }\n\n    const amdRoot = rootPath.parentPath.parentPath\n    if (!amdRoot.isCallExpression()) {\n      return false\n    }\n    if (amdRoot.get('callee.name').node === 'define') {\n      return true\n    }\n    return false\n  }\n}\n"]}